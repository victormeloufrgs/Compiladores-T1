Terminals which are not used

   TOKEN_ERROR


State 48 conflicts: 1 reduce/reduce
State 81 conflicts: 1 shift/reduce
State 127 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declaration declarationList
    3                | /* empty */

    4 declaration: functionDeclaration
    5            | variableDeclaration

    6 variableDeclaration: TK_IDENTIFIER ':' variableTypeAndValue ';'

    7 variableType: KW_BYTE
    8             | KW_SHORT
    9             | KW_LONG
   10             | KW_FLOAT
   11             | KW_DOUBLE

   12 variableTypeAndValue: KW_BYTE LIT_CHAR
   13                     | KW_BYTE LIT_INTEGER
   14                     | KW_SHORT LIT_INTEGER
   15                     | KW_LONG LIT_INTEGER
   16                     | KW_FLOAT LIT_REAL
   17                     | KW_DOUBLE LIT_INTEGER
   18                     | KW_BYTE '[' LIT_INTEGER ']' intList
   19                     | KW_BYTE '[' LIT_INTEGER ']' charList
   20                     | KW_SHORT '[' LIT_INTEGER ']' intList
   21                     | KW_LONG '[' LIT_INTEGER ']' intList
   22                     | KW_FLOAT '[' LIT_INTEGER ']' floatList
   23                     | KW_DOUBLE '[' LIT_INTEGER ']' intList

   24 intList: LIT_INTEGER intList
   25        | /* empty */

   26 charList: LIT_CHAR charList
   27         | /* empty */

   28 floatList: LIT_REAL floatList
   29          | /* empty */

   30 parameterList: param ',' parameterList
   31              | param

   32 param: variableType TK_IDENTIFIER

   33 functionDeclaration: variableType TK_IDENTIFIER '(' parameters ')' command ';'

   34 parameters: parameterList
   35           | /* empty */

   36 commandList: commandList command ';'
   37            | /* empty */

   38 command: attribute
   39        | '{' commandList '}'
   40        | KW_READ TK_IDENTIFIER
   41        | KW_PRINT printList
   42        | KW_RETURN expression
   43        | control
   44        | /* empty */

   45 printList: printElement printList
   46          | printElement

   47 printElement: LIT_STRING
   48             | expression

   49 control: KW_WHEN '(' expression ')' KW_THEN command
   50        | KW_WHEN '(' expression ')' KW_THEN command KW_ELSE command
   51        | KW_WHILE '(' expression ')' command
   52        | KW_FOR '(' TK_IDENTIFIER '=' expression KW_TO expression ')' command

   53 attribute: TK_IDENTIFIER '=' expression
   54          | TK_IDENTIFIER '#' expression '=' expression

   55 expression: '(' expression ')'
   56           | TK_IDENTIFIER
   57           | TK_IDENTIFIER '[' expression ']'
   58           | TK_IDENTIFIER '(' argument ')'
   59           | LIT_INTEGER
   60           | LIT_CHAR
   61           | LIT_REAL
   62           | expression operator expression

   63 argument: expression extraArgument
   64         | /* empty */

   65 extraArgument: ',' expression extraArgument
   66              | /* empty */

   67 operator: OPERATOR_LE
   68         | OPERATOR_GE
   69         | OPERATOR_EQ
   70         | OPERATOR_NE
   71         | OPERATOR_AND
   72         | OPERATOR_OR
   73         | '*'
   74         | '+'
   75         | '-'
   76         | '/'
   77         | '<'
   78         | '>'
   79         | '!'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 79
'#' (35) 54
'(' (40) 33 49 50 51 52 55 58
')' (41) 33 49 50 51 52 55 58
'*' (42) 73
'+' (43) 74
',' (44) 30 65
'-' (45) 75
'/' (47) 76
':' (58) 6
';' (59) 6 33 36
'<' (60) 77
'=' (61) 52 53 54
'>' (62) 78
'[' (91) 18 19 20 21 22 23 57
']' (93) 18 19 20 21 22 23 57
'{' (123) 39
'}' (125) 39
error (256)
KW_BYTE (258) 7 12 13 18 19
KW_SHORT (259) 8 14 20
KW_LONG (260) 9 15 21
KW_FLOAT (261) 10 16 22
KW_DOUBLE (262) 11 17 23
KW_WHEN (263) 49 50
KW_THEN (264) 49 50
KW_ELSE (265) 50
KW_WHILE (266) 51
KW_FOR (267) 52
KW_TO (268) 52
KW_READ (269) 40
KW_RETURN (270) 42
KW_PRINT (271) 41
OPERATOR_LE (272) 67
OPERATOR_GE (273) 68
OPERATOR_EQ (274) 69
OPERATOR_NE (275) 70
OPERATOR_AND (276) 71
OPERATOR_OR (277) 72
LIT_INTEGER (278) 13 14 15 17 18 19 20 21 22 23 24 59
LIT_REAL (279) 16 28 61
LIT_CHAR (280) 12 26 60
LIT_STRING (281) 47
TK_IDENTIFIER (282) 6 32 33 40 52 53 54 56 57 58
TOKEN_ERROR (283)
LOWER_THAN_ELSE (284)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
declarationList (50)
    on left: 2 3, on right: 1 2
declaration (51)
    on left: 4 5, on right: 2
variableDeclaration (52)
    on left: 6, on right: 5
variableType (53)
    on left: 7 8 9 10 11, on right: 32 33
variableTypeAndValue (54)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23, on right: 6
intList (55)
    on left: 24 25, on right: 18 20 21 23 24
charList (56)
    on left: 26 27, on right: 19 26
floatList (57)
    on left: 28 29, on right: 22 28
parameterList (58)
    on left: 30 31, on right: 30 34
param (59)
    on left: 32, on right: 30 31
functionDeclaration (60)
    on left: 33, on right: 4
parameters (61)
    on left: 34 35, on right: 33
commandList (62)
    on left: 36 37, on right: 36 39
command (63)
    on left: 38 39 40 41 42 43 44, on right: 33 36 49 50 51 52
printList (64)
    on left: 45 46, on right: 41 45
printElement (65)
    on left: 47 48, on right: 45 46
control (66)
    on left: 49 50 51 52, on right: 43
attribute (67)
    on left: 53 54, on right: 38
expression (68)
    on left: 55 56 57 58 59 60 61 62, on right: 42 48 49 50 51 52 53
    54 55 57 62 63 65
argument (69)
    on left: 63 64, on right: 58
extraArgument (70)
    on left: 65 66, on right: 63 65
operator (71)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79,
    on right: 62


state 0

    0 $accept: . program $end

    KW_BYTE        shift, and go to state 1
    KW_SHORT       shift, and go to state 2
    KW_LONG        shift, and go to state 3
    KW_FLOAT       shift, and go to state 4
    KW_DOUBLE      shift, and go to state 5
    TK_IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 3 (declarationList)

    program              go to state 7
    declarationList      go to state 8
    declaration          go to state 9
    variableDeclaration  go to state 10
    variableType         go to state 11
    functionDeclaration  go to state 12


state 1

    7 variableType: KW_BYTE .

    $default  reduce using rule 7 (variableType)


state 2

    8 variableType: KW_SHORT .

    $default  reduce using rule 8 (variableType)


state 3

    9 variableType: KW_LONG .

    $default  reduce using rule 9 (variableType)


state 4

   10 variableType: KW_FLOAT .

    $default  reduce using rule 10 (variableType)


state 5

   11 variableType: KW_DOUBLE .

    $default  reduce using rule 11 (variableType)


state 6

    6 variableDeclaration: TK_IDENTIFIER . ':' variableTypeAndValue ';'

    ':'  shift, and go to state 13


state 7

    0 $accept: program . $end

    $end  shift, and go to state 14


state 8

    1 program: declarationList .

    $default  reduce using rule 1 (program)


state 9

    2 declarationList: declaration . declarationList

    KW_BYTE        shift, and go to state 1
    KW_SHORT       shift, and go to state 2
    KW_LONG        shift, and go to state 3
    KW_FLOAT       shift, and go to state 4
    KW_DOUBLE      shift, and go to state 5
    TK_IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 3 (declarationList)

    declarationList      go to state 15
    declaration          go to state 9
    variableDeclaration  go to state 10
    variableType         go to state 11
    functionDeclaration  go to state 12


state 10

    5 declaration: variableDeclaration .

    $default  reduce using rule 5 (declaration)


state 11

   33 functionDeclaration: variableType . TK_IDENTIFIER '(' parameters ')' command ';'

    TK_IDENTIFIER  shift, and go to state 16


state 12

    4 declaration: functionDeclaration .

    $default  reduce using rule 4 (declaration)


state 13

    6 variableDeclaration: TK_IDENTIFIER ':' . variableTypeAndValue ';'

    KW_BYTE    shift, and go to state 17
    KW_SHORT   shift, and go to state 18
    KW_LONG    shift, and go to state 19
    KW_FLOAT   shift, and go to state 20
    KW_DOUBLE  shift, and go to state 21

    variableTypeAndValue  go to state 22


state 14

    0 $accept: program $end .

    $default  accept


state 15

    2 declarationList: declaration declarationList .

    $default  reduce using rule 2 (declarationList)


state 16

   33 functionDeclaration: variableType TK_IDENTIFIER . '(' parameters ')' command ';'

    '('  shift, and go to state 23


state 17

   12 variableTypeAndValue: KW_BYTE . LIT_CHAR
   13                     | KW_BYTE . LIT_INTEGER
   18                     | KW_BYTE . '[' LIT_INTEGER ']' intList
   19                     | KW_BYTE . '[' LIT_INTEGER ']' charList

    LIT_INTEGER  shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    '['          shift, and go to state 26


state 18

   14 variableTypeAndValue: KW_SHORT . LIT_INTEGER
   20                     | KW_SHORT . '[' LIT_INTEGER ']' intList

    LIT_INTEGER  shift, and go to state 27
    '['          shift, and go to state 28


state 19

   15 variableTypeAndValue: KW_LONG . LIT_INTEGER
   21                     | KW_LONG . '[' LIT_INTEGER ']' intList

    LIT_INTEGER  shift, and go to state 29
    '['          shift, and go to state 30


state 20

   16 variableTypeAndValue: KW_FLOAT . LIT_REAL
   22                     | KW_FLOAT . '[' LIT_INTEGER ']' floatList

    LIT_REAL  shift, and go to state 31
    '['       shift, and go to state 32


state 21

   17 variableTypeAndValue: KW_DOUBLE . LIT_INTEGER
   23                     | KW_DOUBLE . '[' LIT_INTEGER ']' intList

    LIT_INTEGER  shift, and go to state 33
    '['          shift, and go to state 34


state 22

    6 variableDeclaration: TK_IDENTIFIER ':' variableTypeAndValue . ';'

    ';'  shift, and go to state 35


state 23

   33 functionDeclaration: variableType TK_IDENTIFIER '(' . parameters ')' command ';'

    KW_BYTE    shift, and go to state 1
    KW_SHORT   shift, and go to state 2
    KW_LONG    shift, and go to state 3
    KW_FLOAT   shift, and go to state 4
    KW_DOUBLE  shift, and go to state 5

    $default  reduce using rule 35 (parameters)

    variableType   go to state 36
    parameterList  go to state 37
    param          go to state 38
    parameters     go to state 39


state 24

   13 variableTypeAndValue: KW_BYTE LIT_INTEGER .

    $default  reduce using rule 13 (variableTypeAndValue)


state 25

   12 variableTypeAndValue: KW_BYTE LIT_CHAR .

    $default  reduce using rule 12 (variableTypeAndValue)


state 26

   18 variableTypeAndValue: KW_BYTE '[' . LIT_INTEGER ']' intList
   19                     | KW_BYTE '[' . LIT_INTEGER ']' charList

    LIT_INTEGER  shift, and go to state 40


state 27

   14 variableTypeAndValue: KW_SHORT LIT_INTEGER .

    $default  reduce using rule 14 (variableTypeAndValue)


state 28

   20 variableTypeAndValue: KW_SHORT '[' . LIT_INTEGER ']' intList

    LIT_INTEGER  shift, and go to state 41


state 29

   15 variableTypeAndValue: KW_LONG LIT_INTEGER .

    $default  reduce using rule 15 (variableTypeAndValue)


state 30

   21 variableTypeAndValue: KW_LONG '[' . LIT_INTEGER ']' intList

    LIT_INTEGER  shift, and go to state 42


state 31

   16 variableTypeAndValue: KW_FLOAT LIT_REAL .

    $default  reduce using rule 16 (variableTypeAndValue)


state 32

   22 variableTypeAndValue: KW_FLOAT '[' . LIT_INTEGER ']' floatList

    LIT_INTEGER  shift, and go to state 43


state 33

   17 variableTypeAndValue: KW_DOUBLE LIT_INTEGER .

    $default  reduce using rule 17 (variableTypeAndValue)


state 34

   23 variableTypeAndValue: KW_DOUBLE '[' . LIT_INTEGER ']' intList

    LIT_INTEGER  shift, and go to state 44


state 35

    6 variableDeclaration: TK_IDENTIFIER ':' variableTypeAndValue ';' .

    $default  reduce using rule 6 (variableDeclaration)


state 36

   32 param: variableType . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 45


state 37

   34 parameters: parameterList .

    $default  reduce using rule 34 (parameters)


state 38

   30 parameterList: param . ',' parameterList
   31              | param .

    ','  shift, and go to state 46

    $default  reduce using rule 31 (parameterList)


state 39

   33 functionDeclaration: variableType TK_IDENTIFIER '(' parameters . ')' command ';'

    ')'  shift, and go to state 47


state 40

   18 variableTypeAndValue: KW_BYTE '[' LIT_INTEGER . ']' intList
   19                     | KW_BYTE '[' LIT_INTEGER . ']' charList

    ']'  shift, and go to state 48


state 41

   20 variableTypeAndValue: KW_SHORT '[' LIT_INTEGER . ']' intList

    ']'  shift, and go to state 49


state 42

   21 variableTypeAndValue: KW_LONG '[' LIT_INTEGER . ']' intList

    ']'  shift, and go to state 50


state 43

   22 variableTypeAndValue: KW_FLOAT '[' LIT_INTEGER . ']' floatList

    ']'  shift, and go to state 51


state 44

   23 variableTypeAndValue: KW_DOUBLE '[' LIT_INTEGER . ']' intList

    ']'  shift, and go to state 52


state 45

   32 param: variableType TK_IDENTIFIER .

    $default  reduce using rule 32 (param)


state 46

   30 parameterList: param ',' . parameterList

    KW_BYTE    shift, and go to state 1
    KW_SHORT   shift, and go to state 2
    KW_LONG    shift, and go to state 3
    KW_FLOAT   shift, and go to state 4
    KW_DOUBLE  shift, and go to state 5

    variableType   go to state 36
    parameterList  go to state 53
    param          go to state 38


state 47

   33 functionDeclaration: variableType TK_IDENTIFIER '(' parameters ')' . command ';'

    KW_WHEN        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_FOR         shift, and go to state 56
    KW_READ        shift, and go to state 57
    KW_RETURN      shift, and go to state 58
    KW_PRINT       shift, and go to state 59
    TK_IDENTIFIER  shift, and go to state 60
    '{'            shift, and go to state 61

    $default  reduce using rule 44 (command)

    command    go to state 62
    control    go to state 63
    attribute  go to state 64


state 48

   18 variableTypeAndValue: KW_BYTE '[' LIT_INTEGER ']' . intList
   19                     | KW_BYTE '[' LIT_INTEGER ']' . charList

    LIT_INTEGER  shift, and go to state 65
    LIT_CHAR     shift, and go to state 66

    ';'       reduce using rule 25 (intList)
    ';'       [reduce using rule 27 (charList)]
    $default  reduce using rule 25 (intList)

    intList   go to state 67
    charList  go to state 68


state 49

   20 variableTypeAndValue: KW_SHORT '[' LIT_INTEGER ']' . intList

    LIT_INTEGER  shift, and go to state 65

    $default  reduce using rule 25 (intList)

    intList  go to state 69


state 50

   21 variableTypeAndValue: KW_LONG '[' LIT_INTEGER ']' . intList

    LIT_INTEGER  shift, and go to state 65

    $default  reduce using rule 25 (intList)

    intList  go to state 70


state 51

   22 variableTypeAndValue: KW_FLOAT '[' LIT_INTEGER ']' . floatList

    LIT_REAL  shift, and go to state 71

    $default  reduce using rule 29 (floatList)

    floatList  go to state 72


state 52

   23 variableTypeAndValue: KW_DOUBLE '[' LIT_INTEGER ']' . intList

    LIT_INTEGER  shift, and go to state 65

    $default  reduce using rule 25 (intList)

    intList  go to state 73


state 53

   30 parameterList: param ',' parameterList .

    $default  reduce using rule 30 (parameterList)


state 54

   49 control: KW_WHEN . '(' expression ')' KW_THEN command
   50        | KW_WHEN . '(' expression ')' KW_THEN command KW_ELSE command

    '('  shift, and go to state 74


state 55

   51 control: KW_WHILE . '(' expression ')' command

    '('  shift, and go to state 75


state 56

   52 control: KW_FOR . '(' TK_IDENTIFIER '=' expression KW_TO expression ')' command

    '('  shift, and go to state 76


state 57

   40 command: KW_READ . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 77


state 58

   42 command: KW_RETURN . expression

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 83


state 59

   41 command: KW_PRINT . printList

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    LIT_STRING     shift, and go to state 84
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    printList     go to state 85
    printElement  go to state 86
    expression    go to state 87


state 60

   53 attribute: TK_IDENTIFIER . '=' expression
   54          | TK_IDENTIFIER . '#' expression '=' expression

    '='  shift, and go to state 88
    '#'  shift, and go to state 89


state 61

   39 command: '{' . commandList '}'

    $default  reduce using rule 37 (commandList)

    commandList  go to state 90


state 62

   33 functionDeclaration: variableType TK_IDENTIFIER '(' parameters ')' command . ';'

    ';'  shift, and go to state 91


state 63

   43 command: control .

    $default  reduce using rule 43 (command)


state 64

   38 command: attribute .

    $default  reduce using rule 38 (command)


state 65

   24 intList: LIT_INTEGER . intList

    LIT_INTEGER  shift, and go to state 65

    $default  reduce using rule 25 (intList)

    intList  go to state 92


state 66

   26 charList: LIT_CHAR . charList

    LIT_CHAR  shift, and go to state 66

    $default  reduce using rule 27 (charList)

    charList  go to state 93


state 67

   18 variableTypeAndValue: KW_BYTE '[' LIT_INTEGER ']' intList .

    $default  reduce using rule 18 (variableTypeAndValue)


state 68

   19 variableTypeAndValue: KW_BYTE '[' LIT_INTEGER ']' charList .

    $default  reduce using rule 19 (variableTypeAndValue)


state 69

   20 variableTypeAndValue: KW_SHORT '[' LIT_INTEGER ']' intList .

    $default  reduce using rule 20 (variableTypeAndValue)


state 70

   21 variableTypeAndValue: KW_LONG '[' LIT_INTEGER ']' intList .

    $default  reduce using rule 21 (variableTypeAndValue)


state 71

   28 floatList: LIT_REAL . floatList

    LIT_REAL  shift, and go to state 71

    $default  reduce using rule 29 (floatList)

    floatList  go to state 94


state 72

   22 variableTypeAndValue: KW_FLOAT '[' LIT_INTEGER ']' floatList .

    $default  reduce using rule 22 (variableTypeAndValue)


state 73

   23 variableTypeAndValue: KW_DOUBLE '[' LIT_INTEGER ']' intList .

    $default  reduce using rule 23 (variableTypeAndValue)


state 74

   49 control: KW_WHEN '(' . expression ')' KW_THEN command
   50        | KW_WHEN '(' . expression ')' KW_THEN command KW_ELSE command

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 95


state 75

   51 control: KW_WHILE '(' . expression ')' command

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 96


state 76

   52 control: KW_FOR '(' . TK_IDENTIFIER '=' expression KW_TO expression ')' command

    TK_IDENTIFIER  shift, and go to state 97


state 77

   40 command: KW_READ TK_IDENTIFIER .

    $default  reduce using rule 40 (command)


state 78

   59 expression: LIT_INTEGER .

    $default  reduce using rule 59 (expression)


state 79

   61 expression: LIT_REAL .

    $default  reduce using rule 61 (expression)


state 80

   60 expression: LIT_CHAR .

    $default  reduce using rule 60 (expression)


state 81

   56 expression: TK_IDENTIFIER .
   57           | TK_IDENTIFIER . '[' expression ']'
   58           | TK_IDENTIFIER . '(' argument ')'

    '['  shift, and go to state 98
    '('  shift, and go to state 99

    '('       [reduce using rule 56 (expression)]
    $default  reduce using rule 56 (expression)


state 82

   55 expression: '(' . expression ')'

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 100


state 83

   42 command: KW_RETURN expression .
   62 expression: expression . operator expression

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113

    $default  reduce using rule 42 (command)

    operator  go to state 114


state 84

   47 printElement: LIT_STRING .

    $default  reduce using rule 47 (printElement)


state 85

   41 command: KW_PRINT printList .

    $default  reduce using rule 41 (command)


state 86

   45 printList: printElement . printList
   46          | printElement .

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    LIT_STRING     shift, and go to state 84
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    $default  reduce using rule 46 (printList)

    printList     go to state 115
    printElement  go to state 86
    expression    go to state 87


state 87

   48 printElement: expression .
   62 expression: expression . operator expression

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113

    $default  reduce using rule 48 (printElement)

    operator  go to state 114


state 88

   53 attribute: TK_IDENTIFIER '=' . expression

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 116


state 89

   54 attribute: TK_IDENTIFIER '#' . expression '=' expression

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 117


state 90

   36 commandList: commandList . command ';'
   39 command: '{' commandList . '}'

    KW_WHEN        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_FOR         shift, and go to state 56
    KW_READ        shift, and go to state 57
    KW_RETURN      shift, and go to state 58
    KW_PRINT       shift, and go to state 59
    TK_IDENTIFIER  shift, and go to state 60
    '{'            shift, and go to state 61
    '}'            shift, and go to state 118

    $default  reduce using rule 44 (command)

    command    go to state 119
    control    go to state 63
    attribute  go to state 64


state 91

   33 functionDeclaration: variableType TK_IDENTIFIER '(' parameters ')' command ';' .

    $default  reduce using rule 33 (functionDeclaration)


state 92

   24 intList: LIT_INTEGER intList .

    $default  reduce using rule 24 (intList)


state 93

   26 charList: LIT_CHAR charList .

    $default  reduce using rule 26 (charList)


state 94

   28 floatList: LIT_REAL floatList .

    $default  reduce using rule 28 (floatList)


state 95

   49 control: KW_WHEN '(' expression . ')' KW_THEN command
   50        | KW_WHEN '(' expression . ')' KW_THEN command KW_ELSE command
   62 expression: expression . operator expression

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113
    ')'           shift, and go to state 120

    operator  go to state 114


state 96

   51 control: KW_WHILE '(' expression . ')' command
   62 expression: expression . operator expression

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113
    ')'           shift, and go to state 121

    operator  go to state 114


state 97

   52 control: KW_FOR '(' TK_IDENTIFIER . '=' expression KW_TO expression ')' command

    '='  shift, and go to state 122


state 98

   57 expression: TK_IDENTIFIER '[' . expression ']'

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 123


state 99

   58 expression: TK_IDENTIFIER '(' . argument ')'

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    $default  reduce using rule 64 (argument)

    expression  go to state 124
    argument    go to state 125


state 100

   55 expression: '(' expression . ')'
   62           | expression . operator expression

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113
    ')'           shift, and go to state 126

    operator  go to state 114


state 101

   67 operator: OPERATOR_LE .

    $default  reduce using rule 67 (operator)


state 102

   68 operator: OPERATOR_GE .

    $default  reduce using rule 68 (operator)


state 103

   69 operator: OPERATOR_EQ .

    $default  reduce using rule 69 (operator)


state 104

   70 operator: OPERATOR_NE .

    $default  reduce using rule 70 (operator)


state 105

   71 operator: OPERATOR_AND .

    $default  reduce using rule 71 (operator)


state 106

   72 operator: OPERATOR_OR .

    $default  reduce using rule 72 (operator)


state 107

   77 operator: '<' .

    $default  reduce using rule 77 (operator)


state 108

   78 operator: '>' .

    $default  reduce using rule 78 (operator)


state 109

   79 operator: '!' .

    $default  reduce using rule 79 (operator)


state 110

   75 operator: '-' .

    $default  reduce using rule 75 (operator)


state 111

   74 operator: '+' .

    $default  reduce using rule 74 (operator)


state 112

   73 operator: '*' .

    $default  reduce using rule 73 (operator)


state 113

   76 operator: '/' .

    $default  reduce using rule 76 (operator)


state 114

   62 expression: expression operator . expression

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 127


state 115

   45 printList: printElement printList .

    $default  reduce using rule 45 (printList)


state 116

   53 attribute: TK_IDENTIFIER '=' expression .
   62 expression: expression . operator expression

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113

    $default  reduce using rule 53 (attribute)

    operator  go to state 114


state 117

   54 attribute: TK_IDENTIFIER '#' expression . '=' expression
   62 expression: expression . operator expression

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113
    '='           shift, and go to state 128

    operator  go to state 114


state 118

   39 command: '{' commandList '}' .

    $default  reduce using rule 39 (command)


state 119

   36 commandList: commandList command . ';'

    ';'  shift, and go to state 129


state 120

   49 control: KW_WHEN '(' expression ')' . KW_THEN command
   50        | KW_WHEN '(' expression ')' . KW_THEN command KW_ELSE command

    KW_THEN  shift, and go to state 130


state 121

   51 control: KW_WHILE '(' expression ')' . command

    KW_WHEN        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_FOR         shift, and go to state 56
    KW_READ        shift, and go to state 57
    KW_RETURN      shift, and go to state 58
    KW_PRINT       shift, and go to state 59
    TK_IDENTIFIER  shift, and go to state 60
    '{'            shift, and go to state 61

    $default  reduce using rule 44 (command)

    command    go to state 131
    control    go to state 63
    attribute  go to state 64


state 122

   52 control: KW_FOR '(' TK_IDENTIFIER '=' . expression KW_TO expression ')' command

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 132


state 123

   57 expression: TK_IDENTIFIER '[' expression . ']'
   62           | expression . operator expression

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113
    ']'           shift, and go to state 133

    operator  go to state 114


state 124

   62 expression: expression . operator expression
   63 argument: expression . extraArgument

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113
    ','           shift, and go to state 134

    $default  reduce using rule 66 (extraArgument)

    extraArgument  go to state 135
    operator       go to state 114


state 125

   58 expression: TK_IDENTIFIER '(' argument . ')'

    ')'  shift, and go to state 136


state 126

   55 expression: '(' expression ')' .

    $default  reduce using rule 55 (expression)


state 127

   62 expression: expression . operator expression
   62           | expression operator expression .

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113

    OPERATOR_LE   [reduce using rule 62 (expression)]
    OPERATOR_GE   [reduce using rule 62 (expression)]
    OPERATOR_EQ   [reduce using rule 62 (expression)]
    OPERATOR_NE   [reduce using rule 62 (expression)]
    OPERATOR_AND  [reduce using rule 62 (expression)]
    OPERATOR_OR   [reduce using rule 62 (expression)]
    '<'           [reduce using rule 62 (expression)]
    '>'           [reduce using rule 62 (expression)]
    '!'           [reduce using rule 62 (expression)]
    '-'           [reduce using rule 62 (expression)]
    '+'           [reduce using rule 62 (expression)]
    '*'           [reduce using rule 62 (expression)]
    '/'           [reduce using rule 62 (expression)]
    $default      reduce using rule 62 (expression)

    operator  go to state 114


state 128

   54 attribute: TK_IDENTIFIER '#' expression '=' . expression

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 137


state 129

   36 commandList: commandList command ';' .

    $default  reduce using rule 36 (commandList)


state 130

   49 control: KW_WHEN '(' expression ')' KW_THEN . command
   50        | KW_WHEN '(' expression ')' KW_THEN . command KW_ELSE command

    KW_WHEN        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_FOR         shift, and go to state 56
    KW_READ        shift, and go to state 57
    KW_RETURN      shift, and go to state 58
    KW_PRINT       shift, and go to state 59
    TK_IDENTIFIER  shift, and go to state 60
    '{'            shift, and go to state 61

    $default  reduce using rule 44 (command)

    command    go to state 138
    control    go to state 63
    attribute  go to state 64


state 131

   51 control: KW_WHILE '(' expression ')' command .

    $default  reduce using rule 51 (control)


state 132

   52 control: KW_FOR '(' TK_IDENTIFIER '=' expression . KW_TO expression ')' command
   62 expression: expression . operator expression

    KW_TO         shift, and go to state 139
    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113

    operator  go to state 114


state 133

   57 expression: TK_IDENTIFIER '[' expression ']' .

    $default  reduce using rule 57 (expression)


state 134

   65 extraArgument: ',' . expression extraArgument

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 140


state 135

   63 argument: expression extraArgument .

    $default  reduce using rule 63 (argument)


state 136

   58 expression: TK_IDENTIFIER '(' argument ')' .

    $default  reduce using rule 58 (expression)


state 137

   54 attribute: TK_IDENTIFIER '#' expression '=' expression .
   62 expression: expression . operator expression

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113

    $default  reduce using rule 54 (attribute)

    operator  go to state 114


state 138

   49 control: KW_WHEN '(' expression ')' KW_THEN command .
   50        | KW_WHEN '(' expression ')' KW_THEN command . KW_ELSE command

    KW_ELSE  shift, and go to state 141

    $default  reduce using rule 49 (control)


state 139

   52 control: KW_FOR '(' TK_IDENTIFIER '=' expression KW_TO . expression ')' command

    LIT_INTEGER    shift, and go to state 78
    LIT_REAL       shift, and go to state 79
    LIT_CHAR       shift, and go to state 80
    TK_IDENTIFIER  shift, and go to state 81
    '('            shift, and go to state 82

    expression  go to state 142


state 140

   62 expression: expression . operator expression
   65 extraArgument: ',' expression . extraArgument

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113
    ','           shift, and go to state 134

    $default  reduce using rule 66 (extraArgument)

    extraArgument  go to state 143
    operator       go to state 114


state 141

   50 control: KW_WHEN '(' expression ')' KW_THEN command KW_ELSE . command

    KW_WHEN        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_FOR         shift, and go to state 56
    KW_READ        shift, and go to state 57
    KW_RETURN      shift, and go to state 58
    KW_PRINT       shift, and go to state 59
    TK_IDENTIFIER  shift, and go to state 60
    '{'            shift, and go to state 61

    $default  reduce using rule 44 (command)

    command    go to state 144
    control    go to state 63
    attribute  go to state 64


state 142

   52 control: KW_FOR '(' TK_IDENTIFIER '=' expression KW_TO expression . ')' command
   62 expression: expression . operator expression

    OPERATOR_LE   shift, and go to state 101
    OPERATOR_GE   shift, and go to state 102
    OPERATOR_EQ   shift, and go to state 103
    OPERATOR_NE   shift, and go to state 104
    OPERATOR_AND  shift, and go to state 105
    OPERATOR_OR   shift, and go to state 106
    '<'           shift, and go to state 107
    '>'           shift, and go to state 108
    '!'           shift, and go to state 109
    '-'           shift, and go to state 110
    '+'           shift, and go to state 111
    '*'           shift, and go to state 112
    '/'           shift, and go to state 113
    ')'           shift, and go to state 145

    operator  go to state 114


state 143

   65 extraArgument: ',' expression extraArgument .

    $default  reduce using rule 65 (extraArgument)


state 144

   50 control: KW_WHEN '(' expression ')' KW_THEN command KW_ELSE command .

    $default  reduce using rule 50 (control)


state 145

   52 control: KW_FOR '(' TK_IDENTIFIER '=' expression KW_TO expression ')' . command

    KW_WHEN        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_FOR         shift, and go to state 56
    KW_READ        shift, and go to state 57
    KW_RETURN      shift, and go to state 58
    KW_PRINT       shift, and go to state 59
    TK_IDENTIFIER  shift, and go to state 60
    '{'            shift, and go to state 61

    $default  reduce using rule 44 (command)

    command    go to state 146
    control    go to state 63
    attribute  go to state 64


state 146

   52 control: KW_FOR '(' TK_IDENTIFIER '=' expression KW_TO expression ')' command .

    $default  reduce using rule 52 (control)
